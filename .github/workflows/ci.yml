# Copyright 2021 Will Wray
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE or http://boost.org/LICENSE_1_0.txt)

name: ci_meson

on:
  workflow_dispatch:
  push:
    paths:
      - "**.cpp"
      - "**.hpp"
  pull_request:
    paths:
      - "**.cpp"
      - "**.hpp"
jobs:
  meson-build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Linux GCC 10 Rel (C++20)", artifact: "Linux.tar.xz",
            os: ubuntu-22.04,
            compiler: gcc-10,
            build_type: RelWithDebInfo,
            cc: "gcc-10", cxx: "g++-10",
          }
        - {
            name: "Linux GCC 12 Rel (C++20)", artifact: "Linux.tar.xz",
            os: ubuntu-22.04,
            compiler: gcc-12,
            build_type: RelWithDebInfo,
            cc: "gcc-12", cxx: "g++-12",
          }
        - {
            name: "Linux Clang 12 Rel(C++20)", artifact: "Linux.tar.xz",
            os: ubuntu-22.04,
            compiler: clang-12,
            build_type: RelWithDebInfo,
            cc: "clang-12", cxx: "clang++-12",
          }
        - {
            name: "Linux Clang 14 Rel(C++20)", artifact: "Linux.tar.xz",
            os: ubuntu-22.04,
            compiler: clang-14,
            build_type: RelWithDebInfo,
            cc: "clang-14", cxx: "clang++-14",
          }
        #- {
        #    name: "macOS Clang 14 Rel (C++20)", artifact: "macOS.tar.xz",
        #    os: macos-12,
        #    compiler: clang,
        #    build_type: RelWithDebInfo,
        #    cc: "clang", cxx: "clang++",
        #  }
        #- {
        #    name: "Windows MSVC 2019 Rel (C++20)", artifact: "Windows-MSVC.tar.xz",
        #    os: windows-latest,
        #    compiler: msvc,
        #    build_type: RelWithDebInfo,
        #    cc: "cl", cxx: "cl",
        #    environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat",
        #    cmake_args: "-D CMAKE_CXX_STANDARD:STRING=20"
        #  }
        - {
            name: "Windows MSVC 2022 Rel (C++20)", artifact: "Windows-MSVC.tar.xz",
            os: windows-latest,
            compiler: msvc,
            build_type: RelWithDebInfo,
            cc: "cl", cxx: "cl",
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars64.bat",
            cmake_args: "-D CMAKE_CXX_STANDARD:STRING=20"
          }
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - run: pip install meson ninja
    - uses: ilammy/msvc-dev-cmd@v1
    - run: meson setup ${{ matrix.config.compiler }}/
      env:
        CC: ${{ matrix.config.cc }},
        CXX: ${{ matrix.config.cxx }}
    - run: meson test -C ${{ matrix.config.compiler }}/ -v

